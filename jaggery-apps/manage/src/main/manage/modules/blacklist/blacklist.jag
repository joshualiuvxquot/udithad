<%
var isAdmin = jagg.getUser().isAdmin;
var isOperator = jagg.getUser().operator;

var site = require("/site/conf/site.json");
var externalServicesUrl = site.externalServicesUrl;

var addSingleURL = externalServicesUrl + "blcklist-whitelist-service/queries/Blacklist/tel:+";
var addBulkURL = externalServicesUrl +"blcklist-whitelist-service/queries/Blacklist";
var getBlacklistURL = externalServicesUrl + "blcklist-whitelist-service/queries/GetBlacklistPerApi/";
var removeBlacklistURL = externalServicesUrl + "blcklist-whitelist-service/queries/RemoveFromBlacklist/";

%>

<%
function getApiwiseBlacklist(api){
	var log = new Log();

	// API invocation
	if (isAdmin || isOperator) {
		log.info(api);
		var data = {"apiName":api
		};
		var newURL = getBlacklistURL + api;
		var response = postJSON(newURL, data);
		log.info("response = " + response);
		
		try{
			response = JSON.parse(response);
			log.info("response.Success.variables = " + response.Success.variables);
			var blacklist = urlDecode(response.Success.variables);
			
			return blacklist;
		} catch(e) {
			log.info("e: " + e);
			return [];
		}
		
	}
}

function addNewToBlacklist(api, subscriberList){
	var log = new Log();
	var subscribers = subscriberList.split(",");

	subscribers = urlEncode(subscribers);

	// Invoke single-add API
	/* for (var i = 0; i < subscribers.length; i++) {
	log.info(subscribers[i]);
	var newURL = addSingleURL + subscribers[i];
	var data = {
	"apiID":"5",
	"apiName":api,
	"userID":jagg.getUser().username
	};
	var response = postJSON(newURL, data);
	log.info("response = " + response);
	} */

	// Invoke bulk-add API
	log.info(subscribers);
	var data = {
		"apiID":"1",
		"apiName":api,
		"userID":jagg.getUser().username,
		"msisdnList":subscribers
	};
	var response = postJSON(addBulkURL, data);
	log.info("response = " + response);

	return response;
}

function removeFromBlacklist(api, subscriber){
	var log = new Log();
	log.info("subscriber: " + subscriber);
	//subscriber = urlEncode(subscriber);
	var newURL = removeBlacklistURL + subscriber;
	var data = {
		"apiName":api
	};
	var response = postJSON(newURL, data);
	log.info("response = " + response);
	return 1;
}

function postJSON(url, data) {
	var log = new Log();
	log.info("data = " + JSON.stringify(data));
	var request = {
		url: url, payload: JSON.stringify(data), handler: function(response) {
			return JSON.parse(response).result;
		}
	};
	log.info("request = " + JSON.stringify(request));

	var ajax = new XMLHttpRequest();
	ajax.open("POST", request.url, false);
	ajax.onreadystatechange = function() {
		if (ajax.readyState == 4) {
			log.info("ajax onreadystatechange");
			request.handler.call(request, ajax.responseText);
		}
	};
	ajax.send(request.payload);
	return ajax.responseText;
}

function urlEncode(subscribers){
	for (i = 0; i < subscribers.length; i++) {
	    subscribers[i] = "tel:+" + subscribers[i];
	}
	return subscribers;
}

function urlDecode(blacklist){
	// startsWith implementation
	if ( typeof String.prototype.startsWith != 'function'){
	  String.prototype.startsWith = function( str ) {
	  	return this.substring( 0, str.length ) === str;
	  }
	};
	
	for (i = 0; i < blacklist.length; i++) {
		if(blacklist[i].startsWith("tel:+")){
			blacklist[i] = blacklist[i].replace("tel:+", "");
		}
	}
	return blacklist;
}
%>
